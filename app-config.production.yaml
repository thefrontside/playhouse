backend:
  auth:
    keys:
      - secret: ${AUTH_BACKEND_SECRET}
  database:
    client: pg
    connection:
      host: ${POSTGRES_SERVICE_HOST}
      port: ${POSTGRES_SERVICE_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}

integrations:
  github:
    - host: github.com
      apps:
        - $include: credentials/backstage-app-credentials.yaml

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  session:
    secret: ${AUTH_SESSION_CLIENT_SECRET}
  environment: production
  providers:
    auth0:
      production:
        domain: ${AUTH_AUTH0_DOMAIN}
        clientId: ${AUTH_AUTH0_CLIENT_ID}
        clientSecret: ${AUTH_AUTH0_CLIENT_SECRET}
        audience: ${AUTH_AUTH0_AUDIENCE}
        # these are optional, and we are using the defaults
        # if added, we need to update ./charts/backstage/Values.yaml
        # connection: ${AUTH_AUTH0_CONNECTION}
        # connectionScope: ${AUTH_AUTH0_CONNECTION_SCOPE}
    github:
      production:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}

catalog:
  locations:
    - type: url
      target: https://github.com/thefrontside/playhouse/blob/main/catalog-info.yaml
    - type: file
      target: ../../templates/standard-microservice/template.yaml
      rules:
        - allow: [Template]
    - type: file
      target: ../../templates/echo-repo-with-auth/template.yaml
      rules:
        - allow: [Template]

techdocs:
  builder: external
  publisher:
    type: googleGcs
    googleGcs:
      bucketName: ${TECHDOCS_STORAGE_BUCKET}
      projectId: ${TECHDOCS_GCLOUD_PROJECT}
      credentials:
        $file: credentials/techdocs-bucket-credentials.json
